<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.scuvis.community.dao.MessageMapper">
    <sql id="selectFields">
        id, from_id, to_id, conversation_id,content,status,create_time
    </sql>
    <sql id="insertFields">
        from_id, to_id, conversation_id,content,status,create_time
    </sql>
    <select id="selectConversations" resultType="org.scuvis.community.entity.Message">
<!--        子查询里先查出当前用户 每个会话里面 最新的（id最大的）那个消息，得到所有的这些最大id-->
<!--        然后在所有消息中查出这些消息-->
        select <include refid="selectFields"/>
        from message
        where id in (
                select max(id)
                from message
                where (from_id = #{userId} or to_id = #{userId})
                      and from_id != 1
                      and status != 2
                group by conversation_id
        )
        order by id desc
        limit #{offset},#{limit}

    </select>

    <select id="selectConversationCount" resultType="int">
        select count(m.maxId)
        from (
             select max(id) maxId
             from message
             where (from_id = #{userId} or to_id = #{userId})
               and from_id != 1
               and status != 2
             group by conversation_id
        ) as m
    </select>

    <select id="selectLetters" resultType="org.scuvis.community.entity.Message">
        select <include refid="selectFields"></include>
        from message
        where status != 2
              and from_id != 1
              and conversation_id = #{conversationId}
        order by id desc
        limit #{offset}, #{limit}
    </select>

    <select id="selectLetterCount" resultType="int">
        select count(id)
        from message
        where status != 2
            and from_id != 1
            and conversation_id = #{conversationId}
    </select>

    <select id="selectLetterUnreadCount" resultType="int">
        select count(id)
        from message
        where status = 0
        and from_id != 1
<!--        未读消息仅限接收方-->
        and to_id = #{userId}
        <if test="conversationId!=null">
            and conversation_id = #{conversationId}
        </if>
    </select>

    <insert id="insertMessage" useGeneratedKeys="true" keyProperty="id">
        insert into message (<include refid="insertFields"/>)
        values(#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>

    <update id="updateMessageStatus">
        update message set status=#{status}
        where id in
            <foreach collection="ids" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
    </update>

    <select id="selectLatestMessageByTopic" resultType="org.scuvis.community.entity.Message">
        select
        <include refid="selectFields">
        </include>
        from message
        where id in (
            select max(id) from message
            where to_id = #{userId}
            and topic = #{topic}
            and status != 2
            and from_id = 1
        )

    </select>

    <select id="selectNoticeCountByTopic" resultType="int">
        select
        count(id)
        from message
        where topic = #{topic}
        and status != 2
        and from_id = 1
        and to_id = #{userId}
    </select>

    <select id="selectNoticeUnreadCountByTopic" resultType="int">
        select
            count(id)
        from message
        where status = 0
          and from_id = 1
          and to_id = #{userId}
        <if test="topic!=null">
            and topic = #{topic}
        </if>
    </select>
</mapper>